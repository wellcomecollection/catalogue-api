steps:
  - label: "Internal model tool: check compatibility"
    plugins:
      - wellcomecollection/aws-assume-role#v0.2.2:
          role: "arn:aws:iam::756629837203:role/catalogue-ci"
      - docker-compose#v3.5.0:
          run: internal_model_tool
          env:
            - AWS_ACCESS_KEY_ID
            - AWS_SECRET_ACCESS_KEY
            - AWS_SESSION_TOKEN
            - AWS_REGION=eu-west-1
            - AWS_DEFAULT_REGION=eu-west-1
    agents:
      queue: nano
  - command: .buildkite/scripts/check_vendored_code.py
    label: "check vendored code"
    agents:
      queue: nano

  - wait

  - command: .buildkite/scripts/run_autoformat.py
    label: "autoformat"
  - command: .buildkite/scripts/run_job.py display
    label: "display"
  - command: .buildkite/scripts/run_job.py search_common
    label: "search_common"
  - command: .buildkite/scripts/run_job.py stacks
    label: "stacks_common"
  - command: .buildkite/scripts/run_job.py search
    label: "Search API (Works & Images)"
  - command: .buildkite/scripts/run_job.py items
    label: "Stacks: Items API"
  - command: .buildkite/scripts/run_job.py requests
    label: "Stacks: Requests API"
  - command: .buildkite/scripts/run_job.py snapshot_generator
    label: "snapshot generator"

  - wait

  - command: .buildkite/scripts/tag_commit_as_latest.py
    if: build.branch == "main"
    label: "tag commit as latest"
    agents:
      queue: nano

  - wait

  - label: trigger stage deploy
    branches: "main"
    trigger: "catalogue-api-deploy-stage"
    async: true
    build:
      message: "${BUILDKITE_MESSAGE}"
      commit: "${BUILDKITE_COMMIT}"
      branch: "${BUILDKITE_BRANCH}"
      env:
        BUILDKITE_PULL_REQUEST: "${BUILDKITE_PULL_REQUEST}"
        BUILDKITE_PULL_REQUEST_BASE_BRANCH: "${BUILDKITE_PULL_REQUEST_BASE_BRANCH}"
        BUILDKITE_PULL_REQUEST_REPO: "${BUILDKITE_PULL_REQUEST_REPO}"
